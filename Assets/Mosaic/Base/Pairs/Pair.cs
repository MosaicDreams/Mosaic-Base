using System;
using System.Collections.Generic;

namespace Mosaic.Base.Pairs
{
    //Generated by ChatGPT.
    public class Pair<TFirst, TSecond> : IEquatable<Pair<TFirst, TSecond>>
    {
        public TFirst First { get; private set; }
        public TSecond Second { get; private set; }

        public Pair(TFirst first, TSecond second)
        {
            First = first;
            Second = second;
        }

        public Pair<TFirst, TSecond> WithFirst(TFirst newFirst)
        {
            return new Pair<TFirst, TSecond>(newFirst, Second);
        }

        public Pair<TFirst, TSecond> WithSecond(TSecond newSecond)
        {
            return new Pair<TFirst, TSecond>(First, newSecond);
        }

        public bool Equals(Pair<TFirst, TSecond> other)
        {
            if (other is null)
                return false;

            return EqualityComparer<TFirst>.Default.Equals(First, other.First) &&
                EqualityComparer<TSecond>.Default.Equals(Second, other.Second);
        }

        public override bool Equals(object obj)
        {
            if (obj is Pair<TFirst, TSecond> other)
            {
                return Equals(other);
            }

            return false;
        }

        public override int GetHashCode()
        {
            int hashFirst = EqualityComparer<TFirst>.Default.GetHashCode(First);
            int hashSecond = EqualityComparer<TSecond>.Default.GetHashCode(Second);

            return hashFirst ^ hashSecond;
        }

        public bool IsNull() => First == null && Second == null;
        public bool HasNull() => First == null || Second == null;
    }
}
